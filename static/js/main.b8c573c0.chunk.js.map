{"version":3,"sources":["components/MainPage/components/MoviesDisplay/components/MovieContainer/components/MovieEdit/components/AcceptEdit/AcceptEdit.js","actions/action-types.js","services/MovieService.js","actions/appActions.js","components/common/components/moviePipe.js","components/MainPage/components/MoviesDisplay/components/MovieContainer/components/MovieEdit/MovieEdit.js","components/MainPage/components/MoviesDisplay/components/MovieContainer/components/DeletePopup/DeletePopup.js","components/MainPage/components/MoviesDisplay/components/MovieContainer/components/MovieOptions/MovieOptions.js","components/MainPage/components/MoviesDisplay/components/MovieContainer/MovieContainer.js","components/MainPage/components/MoviesDisplay/MoviesDisplay.js","components/common/components/Duplicate.js","components/MainPage/components/Header/components/AddMovie/AddMovie.js","components/MainPage/components/Header/Header.js","components/MainPage/components/Footer/Footer.js","components/MainPage/MainPage.js","App.js","reducers/appReducer.js","store/store.js","index.js"],"names":["AcceptEdit","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isOpen","_this2","react_default","a","createElement","className","Dialog_default","open","openAlert","DialogTitle_default","DialogContent_default","DialogContentText_default","id","DialogActions_default","Button_default","onClick","editAccepted","Component","GET_MOVIES_BY_NAME_REQUEST","GET_MOVIES_BY_NAME_RESPONSE","EDIT_MOVIE","DELETE_MOVIE","ADD_MOVIE","ID_GENE","services_MovieService","name","axios","get","imdbId","deleteMovie","movieObj","type","payload","moviePipe","elem","test","replace","isNaN","toLowerCase","split","map","letter","charAt","toUpperCase","substring","join","MovieEdit","boolean","editMovie","Title","Year","Runtime","Genre","Director","imdbID","movie","setState","openEdit","handleChange","event","defineProperty","target","value","handleSubmit","preventDefault","handleCancel","isEditOpen","lib","onSubmit","validators","margin","onChange","label","errorMessages","fullWidth","color","components_AcceptEdit_AcceptEdit","ConnectedMovieEdit","connect","dispatch","DeletePopup","isDeleteOpen","MovieOptions","anchorEl","handleClick","currentTarget","handleClose","Menu_default","Boolean","onClose","MenuItem_default","components_MovieEdit_MovieEdit","components_DeletePopup_DeletePopup","ConnectedMovieOptions","MovieContainer","style","backgroundImage","concat","Poster","components_MovieOptions_MovieOptions","Plot","ConnectedMovieContainer","MoviesDisplay","movies","fetchMovies","moviesId","moviesArr","components_MovieContainer_MovieContainer","data","ConnectedMainPage","fetching","movieList","movieId","Promise","all","MoviesService","getMovieByImdbId","then","moviesList","DuplicateAlert","_Component","inherits","createClass","key","isDuplicate","closeDuplicate","AddMovie","newMovie","movieArr","num","noDuplicate","addMovie","addId","toggleAddMovie","idGene","addMovieOpen","Duplicate_DuplicateAlert","ConnectedAddMovie","time","Date","now","Header","components_AddMovie_AddMovie","Footer","MainPage","components_Header_Header","components_MoviesDisplay_MoviesDisplay","components_Footer_Footer","App","components_MainPage_MainPage","initialState","appReducer","arguments","length","undefined","action","objectSpread","toConsumableArray","slice","findIndex","store","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","es","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.b8c573c0.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nclass AcceptEdit extends Component{\r\n   constructor(props){\r\n       super(props)\r\n       this.state = {\r\n           isOpen: false\r\n       }\r\n   }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"accept-edit\">\r\n            <Dialog open={this.props.state.openAlert}>\r\n                <DialogTitle>{\"Ready to send?\"}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        Are you sure you want to update this movie?\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n            <       Button onClick={()=>this.props.editAccepted(false)}>\r\n                        No\r\n                    </Button>\r\n                    <Button onClick={()=>this.props.editAccepted(true)}>\r\n                        Yes\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>  \r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default AcceptEdit\r\n","\r\nexport const GET_MOVIES_BY_NAME_REQUEST = \"GET_MOVIES_LIST_REQUEST\"\r\nexport const GET_MOVIES_BY_NAME_RESPONSE = \"GET_MOVIES_LIST_RESPONSE\"\r\nexport const EDIT_MOVIE = \"EDIT_MOVIE\"\r\nexport const DELETE_MOVIE = \"DELETE_MOVIE\"\r\nexport const ADD_MOVIE = \"ADD_MOVIE\"\r\nexport const ID_GENE = \"ID_GENE\"\r\n","import axios from 'axios'\r\n\r\n\r\nclass MovieService{\r\n\r\n    getMovieByName(name){  \r\n       return axios.get('https://www.omdbapi.com/?t='+ name + '&type=movie&apikey=ebf7786a')\r\n    }\r\n    getMovieByImdbId(imdbId){\r\n        return axios.get('https://www.omdbapi.com/?i='+ imdbId + '&type=movie&apikey=ebf7786a')\r\n    }\r\n    getMovieListByName(name){\r\n        return axios.get('https://www.omdbapi.com/?s='+ name + '&type=movie&apikey=ebf7786a')\r\n    }\r\n}\r\n\r\nexport default new MovieService()","import {\r\n    GET_MOVIES_BY_NAME_REQUEST,\r\n    GET_MOVIES_BY_NAME_RESPONSE,\r\n    EDIT_MOVIE,\r\n    DELETE_MOVIE,\r\n    ADD_MOVIE,\r\n    ID_GENE\r\n} from \"./action-types\";\r\n\r\nimport MoviesService from \"../services/MovieService\" \r\n\r\nexport function getMoviesRequest(){\r\n    return {\r\n        type: GET_MOVIES_BY_NAME_REQUEST\r\n    }\r\n}\r\nexport function getMoviesReceive(moviesArr){\r\n    return {\r\n        type: GET_MOVIES_BY_NAME_RESPONSE,\r\n        moviesArr\r\n    }\r\n}\r\nexport function fetchMovies(movieId){\r\n    return dispatch => { \r\n        return Promise.all( movieId.map(id => {\r\n            return  MoviesService.getMovieByImdbId(id)\r\n        }))\r\n        .then(moviesList => {\r\n            dispatch({type: GET_MOVIES_BY_NAME_RESPONSE, payload: moviesList})\r\n        });\r\n}\r\n}\r\nexport function editMovie(movieObj){\r\n    return{\r\n        type: EDIT_MOVIE,\r\n        payload: movieObj\r\n    }\r\n}\r\nexport function deleteMovie(movieObj){\r\n    return{\r\n        type: DELETE_MOVIE,\r\n        payload: movieObj\r\n    }\r\n}\r\nexport function addMovie(movieObj){\r\n    return{\r\n        type: ADD_MOVIE,\r\n        payload:[ { \r\n            data: movieObj,\r\n            time: Date.now() \r\n        } ]\r\n    }\r\n}\r\nexport function idGene(){\r\n    return{\r\n        type: ID_GENE\r\n    }\r\n}","export default function moviePipe(movieObj){\r\n    for (let elem in movieObj) {  \r\n            if(/^[a-zA-Z0-9!?&-. +]+$/.test(movieObj[elem]) === false){\r\n                movieObj[elem] = movieObj[elem].replace(/[^a-zA-Z0-9!?&-. +]/g, \"\")\r\n            }\r\n            if( isNaN(movieObj[elem]) ){\r\n                movieObj[elem] = movieObj[elem].toLowerCase()\r\n                    .split(' ')\r\n                    .map((letter) => letter.charAt(0).toUpperCase() + letter.substring(1))\r\n                    .join(' ');\r\n            }\r\n            if(movieObj[elem] === \"\"){\r\n                movieObj[elem] = \"*No Name*\"\r\n            }\r\n    }\r\n    return movieObj\r\n}\r\n\r\n","import './MovieEdit.scss'\r\nimport React, { Component } from 'react'\r\nimport AcceptEdit from './components/AcceptEdit/AcceptEdit'\r\nimport { connect } from \"react-redux\";\r\nimport {editMovie} from '../../../../../../../../actions/appActions'\r\nimport moviePipe from '../../../../../../../common/components/moviePipe'\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { ValidatorForm, TextValidator} from 'react-material-ui-form-validator';\r\n\r\nconst mapDispatchToProps = dispatch => { //push props to store\r\n    return {\r\n        editMovie: movieObj => dispatch(editMovie(movieObj)),\r\n        };\r\n    };\r\n\r\nclass MovieEdit extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = { \r\n               Title: this.props.movie.Title,\r\n               Year: this.props.movie.Year,\r\n               Runtime: this.props.movie.Runtime,\r\n               Genre: this.props.movie.Genre,\r\n               Director: this.props.movie.Director,\r\n               openAlert: false\r\n        }\r\n    }\r\n    editAccepted = (boolean) =>{\r\n        if(boolean){\r\n            moviePipe(this.state)\r\n            this.props.editMovie({\r\n                \"Title\": this.state.Title,\r\n                \"Year\": this.state.Year,\r\n                \"Runtime\": this.state.Runtime,\r\n                \"Genre\": this.state.Genre,\r\n                \"Director\": this.state.Director,\r\n                \"imdbID\": this.props.movie.imdbID\r\n            })\r\n            this.setState({openAlert: false})\r\n            this.props.openEdit(false)\r\n        } else {this.setState({openAlert: false})\r\n    }\r\n    }\r\n    handleChange = (event) => {\r\n        this.setState({[event.target.name]: event.target.value});\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        this.setState({openAlert: true})\r\n        event.preventDefault();\r\n    }\r\n    handleCancel = () => {\r\n        this.setState({ \"Title\": this.props.movie.Title, \"Year\": this.props.movie.Year, \"Runtime\": this.props.movie.Runtime, \"Genre\": this.props.movie.Genre, \"Director\": this.props.movie.Director})\r\n        this.props.openEdit(false)\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"movie-edit\">\r\n                <Dialog open={this.props.isEditOpen}>\r\n                <DialogTitle id=\"form-dialog-title\">Edit Movie</DialogTitle>\r\n                <ValidatorForm className=\"add-movie-form\" onSubmit={this.handleSubmit}>\r\n                    <TextValidator  validators={['required', 'isString']} \r\n                                    value={this.state.Title}\r\n                                    margin=\"normal\" \r\n                                    name=\"Title\" \r\n                                    onChange={this.handleChange} \r\n                                    label=\"Title\" \r\n                                    type=\"text\"\r\n                                    errorMessages={['This field is required', 'Title is not valid']} \r\n                                    fullWidth\r\n                                    />\r\n                    <TextValidator  validators={['required', 'isNumber',\"minNumber:1700\"]} \r\n                                    value={this.state.Year} \r\n                                    margin= \"normal\"\r\n                                    name=\"Year\" \r\n                                    onChange={this.handleChange} \r\n                                    label=\"Year\" \r\n                                    type=\"text\"\r\n                                    errorMessages={['This field is required', 'Year is not valid', 'Year is not valid']}\r\n                                    fullWidth\r\n                                    />\r\n                    <TextValidator  validators={['required', 'isString']} \r\n                                    value={this.state.Runtime} \r\n                                    margin=\"normal\" \r\n                                    name=\"Runtime\" \r\n                                    onChange={this.handleChange} \r\n                                    label=\"Runtime\" \r\n                                    type=\"text\"\r\n                                    errorMessages={['This field is required', 'Runtime is not valid']} \r\n                                    fullWidth\r\n                                    />\r\n                    <TextValidator  validators={['required', 'isString']} \r\n                                    value={this.state.Genre} \r\n                                    margin=\"normal\" \r\n                                    name=\"Genre\" \r\n                                    onChange={this.handleChange} \r\n                                    label=\"Genre\" \r\n                                    type=\"text\"\r\n                                    errorMessages={['This field is required', 'Genre is not valid']} \r\n                                    fullWidth\r\n                                    />\r\n                    <TextValidator  validators={['required', 'isString']} \r\n                                    value={this.state.Director} \r\n                                    margin=\"normal\" \r\n                                    name=\"Director\" \r\n                                    onChange={this.handleChange} \r\n                                    label=\"Director\" \r\n                                    type=\"text\" \r\n                                    errorMessages={['This field is required', \"Director's name is not valid\"]} \r\n                                    fullWidth\r\n                                    />\r\n                    <DialogActions>\r\n                        <Button className=\"movie-edit-btn\" type=\"submit\" color=\"primary\"> Send </Button>\r\n                        <Button className=\"movie-edit-btn\" onClick={this.handleCancel} color=\"primary\"> Cancel </Button>\r\n                    </DialogActions>                       \r\n                </ValidatorForm>\r\n                </Dialog>\r\n                <AcceptEdit state={this.state} editAccepted={this.editAccepted}/>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nconst ConnectedMovieEdit = connect(null, mapDispatchToProps)(MovieEdit)\r\nexport default ConnectedMovieEdit\r\n","import React, { Component } from 'react'\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nclass DeletePopup extends Component{\r\n   constructor(props){\r\n       super(props)\r\n       this.state = {\r\n           isOpen: false\r\n       }\r\n   }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"delete-popup\">\r\n            <Dialog open={this.props.isDeleteOpen}>\r\n                <DialogTitle>{\"Want to delete?\"}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        Are you sure you want to delete \"{this.props.movie.Title}\"?\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={()=>this.props.deleteMovie(false)}>\r\n                        No\r\n                    </Button>\r\n                    <Button onClick={()=>this.props.deleteMovie(true)}>\r\n                        Yes\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>  \r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default DeletePopup\r\n","import './MovieOptions.scss'\r\nimport React, { Component } from 'react'\r\nimport MovieEdit from '../MovieEdit/MovieEdit'\r\nimport DeletePopup from '../DeletePopup/DeletePopup'\r\n\r\nimport { connect } from \"react-redux\";\r\nimport {deleteMovie} from '../../../../../../../../actions/appActions'\r\n\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nconst mapDispatchToProps = dispatch => { //push props to store\r\n    return {\r\n        deleteMovie: movieObj => dispatch(deleteMovie(movieObj)),\r\n    };\r\n};\r\n\r\nclass MovieOptions extends Component{\r\n    state = {\r\n        anchorEl: null,\r\n        isEditOpen: false,\r\n        isDeleteOpen: false\r\n    };\r\n    \r\n    handleClick = event => {\r\n        this.setState({ anchorEl: event.currentTarget });\r\n    };\r\n    \r\n    handleClose = () => {\r\n        this.setState({ anchorEl: null });\r\n    };\r\n\r\n    openEdit = (boolean) =>{\r\n        if(boolean === true){\r\n        this.setState({ isEditOpen: !this.state.isEditOpen })\r\n        this.handleClose()\r\n        } else {\r\n            this.setState({\r\n                isEditOpen: !this.state.isEditOpen  })\r\n        }\r\n    }\r\n    deleteMovie = (boolean) =>{\r\n        if(boolean){\r\n            this.props.deleteMovie(this.props.movie)\r\n            this.setState({isDeleteOpen: false})\r\n        }   else { this.setState({isDeleteOpen: false}) }\r\n        this.handleClose()\r\n    }\r\n    render() {        \r\n        return (\r\n            <div className=\"movie-options\">\r\n                <i className=\"fas fa-ellipsis-v\" onClick={this.handleClick}></i>\r\n                <Menu\r\n                    id=\"simple-menu\"\r\n                    anchorEl={this.state.anchorEl}\r\n                    open={Boolean(this.state.anchorEl)}\r\n                    onClose={this.handleClose}\r\n                >\r\n                    <MenuItem onClick={()=>this.openEdit(true)}>Edit</MenuItem>\r\n                    <MenuItem onClick={()=>this.setState({isDeleteOpen: true})}>Delete</MenuItem>\r\n                </Menu>\r\n                <MovieEdit isEditOpen={this.state.isEditOpen} openEdit={this.openEdit} movie={this.props.movie}/>\r\n                <DeletePopup isDeleteOpen={this.state.isDeleteOpen} deleteMovie={this.deleteMovie} movie={this.props.movie}/>\r\n            </div>  \r\n            )\r\n        }\r\n        \r\n    }\r\n    \r\n    const ConnectedMovieOptions = connect(null, mapDispatchToProps)(MovieOptions)\r\n    export default ConnectedMovieOptions\r\n    \r\n    ","import './MovieContainer.scss'\r\nimport React, { Component } from 'react'\r\nimport MovieEdit from './components/MovieEdit/MovieEdit'\r\nimport DeletePopup from './components/DeletePopup/DeletePopup'\r\nimport MovieOptions from './components/MovieOptions/MovieOptions'\r\n\r\nimport { connect } from \"react-redux\";\r\nimport {deleteMovie} from '../../../../../../actions/appActions'\r\n\r\nconst mapDispatchToProps = dispatch => { //push props to store\r\n    return {\r\n        deleteMovie: movieObj => dispatch(deleteMovie(movieObj)),\r\n        };\r\n    };\r\n\r\nclass MovieContainer extends Component{\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"movie-container\">\r\n                <div className=\"movie-picture\" style={{backgroundImage: `url(${this.props.movie.Poster})`}}></div>\r\n                <div className=\"movie-info\">\r\n                    <div className=\"movie-info-header\">\r\n                        <span className=\"movie-info-header-text movie-title-year\">{this.props.movie.Title} ({this.props.movie.Year})</span>\r\n                        <MovieOptions movie={this.props.movie}/>\r\n                    </div>\r\n                    <span className=\"movie-info-text movie-runtime-genre\">{this.props.movie.Runtime} | {this.props.movie.Genre}</span>\r\n                    <span className=\"movie-info-text movie-desc\">{this.props.movie.Plot}</span>\r\n                    <div className=\"movie-info-text movie-director\">\r\n                        <span className=\"movie-director-title\">Director: </span> \r\n                        {this.props.movie.Director}\r\n                    </div>\r\n                </div>\r\n            </div>   \r\n        )\r\n    }\r\n    \r\n}\r\n\r\nconst ConnectedMovieContainer = connect(null, mapDispatchToProps)(MovieContainer)\r\nexport default ConnectedMovieContainer\r\n\r\n","import './MoviesDisplay.scss'\r\nimport React, { Component } from 'react'\r\n\r\nimport MovieContainer from './components/MovieContainer/MovieContainer'\r\n\r\nimport { connect } from \"react-redux\";\r\nimport {fetchMovies} from '../../../../actions/appActions'\r\n\r\nconst mapDispatchToProps = dispatch => { //push props to store\r\n    return {\r\n        fetchMovies: movieList => dispatch(fetchMovies(movieList)),\r\n        };\r\n    };\r\nconst mapStateToProps = state => { //pull props from store\r\n    return { \r\n        moviesId: state.moviesId,\r\n        moviesArr: state.moviesArr,\r\n        fetching: state.fetching\r\n        };\r\n    };  \r\n      \r\nclass MoviesDisplay extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            movies: [],\r\n        }\r\n    }\r\n    componentWillMount(){\r\n        this.props.fetchMovies(this.props.moviesId)\r\n    }\r\n    \r\n    render(){\r\n        return(\r\n                <div className=\"movie-display\">\r\n                    { this.props.moviesArr.map( movie => <MovieContainer movie={movie.data}/> ) }\r\n                </div>\r\n        )\r\n    }\r\n}\r\nconst ConnectedMainPage = connect(mapStateToProps, mapDispatchToProps)(MoviesDisplay)\r\nexport default ConnectedMainPage\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nexport function noDuplicate(newMovie, movieArr ){\r\n    let num = 0 \r\n    movieArr.map(movie =>{\r\n        if(movie.data.Title == newMovie.Title){ num++ } \r\n    } )\r\n    return num\r\n}\r\n\r\nexport class DuplicateAlert extends Component{\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"duplicate-popup\">\r\n                <Dialog open={this.props.state.isDuplicate}>\r\n                    <DialogTitle>{\"Duplicate\"}</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText id=\"alert-dialog-description\">\r\n                            Sorry but the movie \"{this.props.state.Title}\" already exists in the database.\r\n                            Try adding another movie.\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.props.closeDuplicate}>\r\n                            Ok\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>  \r\n            </div>\r\n        )\r\n    }\r\n}","import './AddMovie.scss'\r\nimport React, { Component } from 'react'\r\n\r\nimport { connect } from \"react-redux\";\r\nimport {addMovie, idGene} from '../../../../../../actions/appActions'\r\nimport {noDuplicate,DuplicateAlert} from '../../../../../common/components/Duplicate'\r\nimport moviePipe from '../../../../../common/components/moviePipe'\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { ValidatorForm, TextValidator} from 'react-material-ui-form-validator';\r\n\r\nconst mapDispatchToProps = dispatch => { //push props to store\r\n    return {\r\n        addMovie: movieObj => dispatch(addMovie(movieObj)),\r\n        idGene: () => dispatch(idGene())\r\n        };\r\n    };\r\n    \r\nconst mapStateToProps = state => { //pull props from store\r\n    return { \r\n        addId: state.addId,\r\n        moviesArr: state.moviesArr\r\n        };\r\n    };  \r\n\r\nclass AddMovie extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            \"Title\": \"\",\r\n            \"Year\": \"\",\r\n            \"Runtime\": \"\",\r\n            \"Genre\": \"\",\r\n            \"Director\": \"\",\r\n            \"isDuplicate\": false\r\n        }\r\n    }\r\n    \r\n    handleChange = (event) => {\r\n        this.setState({[event.target.name]: event.target.value});\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        if(noDuplicate(this.state, this.props.moviesArr) > 0){\r\n            this.setState({isDuplicate: true}) \r\n        } else {\r\n            moviePipe(this.state)\r\n            this.props.addMovie({\r\n                \"Title\": this.state.Title,\r\n                \"Year\": this.state.Year,\r\n                \"Runtime\": this.state.Runtime,\r\n                \"Genre\": this.state.Genre,\r\n                \"Director\": this.state.Director,\r\n                \"imdbID\": this.props.addId,\r\n                \"Poster\": \"https://i.imgur.com/Z2MYNbj.png/large_movie_poster.png\"\r\n            })\r\n            this.props.toggleAddMovie()\r\n            this.props.idGene()\r\n            this.setState({ \"Title\": \"\", \"Year\": \"\", \"Runtime\": \"\", \"Genre\": \"\", \"Director\": \"\"})\r\n        }\r\n        event.preventDefault()\r\n    }\r\n    closeDuplicate = () =>{\r\n        this.setState({isDuplicate: false})\r\n    }\r\n    render(){\r\n        return(\r\n            <div className='add-movie'>\r\n                <Dialog open={this.props.addMovieOpen}>\r\n                    <DialogTitle className=\"add-movie-title\">Add a Movie</DialogTitle>\r\n                    <DialogContentText className=\"add-movie-description\">\r\n                        Please fill all the fields.\r\n                    </DialogContentText>\r\n                    <ValidatorForm className=\"add-movie-form\" onSubmit={this.handleSubmit}>\r\n                        <TextValidator  validators={['required', 'isString']} \r\n                                        value={this.state.Title}\r\n                                        margin=\"normal\" \r\n                                        name=\"Title\" \r\n                                        onChange={this.handleChange} \r\n                                        label=\"Title\" \r\n                                        type=\"text\"\r\n                                        errorMessages={['This field is required', 'Title is not valid']} \r\n                                        fullWidth\r\n                                        />\r\n                        <TextValidator  validators={['required', 'isNumber',\"minNumber:1700\"]} \r\n                                        value={this.state.Year} \r\n                                        margin= \"normal\"\r\n                                        name=\"Year\" \r\n                                        onChange={this.handleChange} \r\n                                        label=\"Year\" \r\n                                        type=\"text\"\r\n                                        errorMessages={['This field is required', 'Year is not valid', 'Year is not valid']}\r\n                                        fullWidth\r\n                                        />\r\n                        <TextValidator  validators={['required', 'isString']} \r\n                                        value={this.state.Runtime} \r\n                                        margin=\"normal\" \r\n                                        name=\"Runtime\" \r\n                                        onChange={this.handleChange} \r\n                                        label=\"Runtime\" \r\n                                        type=\"text\"\r\n                                        errorMessages={['This field is required', 'Runtime is not valid']} \r\n                                        fullWidth\r\n                                        />\r\n                        <TextValidator  validators={['required', 'isString']} \r\n                                        value={this.state.Genre} \r\n                                        margin=\"normal\" \r\n                                        name=\"Genre\" \r\n                                        onChange={this.handleChange} \r\n                                        label=\"Genre\" \r\n                                        type=\"text\"\r\n                                        errorMessages={['This field is required', 'Genre is not valid']} \r\n                                        fullWidth\r\n                                        />\r\n                        <TextValidator  validators={['required', 'isString']} \r\n                                        value={this.state.Director} \r\n                                        margin=\"normal\" \r\n                                        name=\"Director\" \r\n                                        onChange={this.handleChange} \r\n                                        label=\"Director\" \r\n                                        type=\"text\" \r\n                                        errorMessages={['This field is required', \"Director's name is not valid\"]} \r\n                                        fullWidth\r\n                                        />\r\n                        <DialogActions>\r\n                            <Button className=\"movie-edit-btn\" type=\"submit\" color=\"primary\"> Send </Button>\r\n                            <Button className=\"movie-edit-btn\" onClick={this.props.toggleAddMovie} color=\"primary\"> Cancel </Button>\r\n                        </DialogActions>\r\n                    </ValidatorForm>\r\n                </Dialog>\r\n                <DuplicateAlert state={this.state} closeDuplicate={this.closeDuplicate}/>\r\n            </div>\r\n    )\r\n    }\r\n}\r\nconst ConnectedAddMovie = connect(mapStateToProps, mapDispatchToProps)(AddMovie)\r\nexport default ConnectedAddMovie\r\n","import './Header.scss'\r\nimport React, { Component } from 'react'\r\nimport AddMovie from './components/AddMovie/AddMovie'\r\n\r\nclass Header extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            addMovieOpen: false\r\n        }\r\n    }\r\n    toggleAddMovie = () => {\r\n        this.setState( { addMovieOpen: !this.state.addMovieOpen } )\r\n    }\r\n    render(){\r\n     \r\n        return(\r\n            <div className=\"header\">\r\n                <div className=\"header-background\">\r\n                    <div className=\"top-header\">\r\n                        <div className=\"header-link-container\">\r\n                            <div className=\"header-link-btn\" onClick={this.toggleAddMovie}>\r\n                                <span className=\"header-link-text\" > Add Movies </span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                        <div className=\"header-info\">\r\n                            <span className=\"header-title\">Cinema</span>\r\n                            <span className=\"header-description\">Your Movie Organizer</span>\r\n                        </div>\r\n                    <AddMovie addMovieOpen={this.state.addMovieOpen} toggleAddMovie={this.toggleAddMovie}/>\r\n                </div>\r\n            </div>\r\n    )   }\r\n}\r\nexport default Header\r\n\r\n\r\n\r\n","import './Footer.scss'\r\nimport React, { Component } from 'react'\r\n\r\nclass Footer extends Component{\r\n\r\n    render(){\r\n     \r\n        return(\r\n            <div className=\"footer\">\r\n                <div className=\"footer-text\">Name: Lucas Lyra</div>\r\n                <div className=\"footer-text\">Email: lucalyra@gmail.com</div>\r\n            </div>\r\n    )   }\r\n}\r\nexport default Footer\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport './MainPage.scss';\r\n\r\nimport MoviesDisplay from './components/MoviesDisplay/MoviesDisplay'\r\nimport Header from './components/Header/Header'\r\nimport Footer from './components/Footer/Footer'\r\nclass MainPage extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"main-page\">\r\n        <Header/>\r\n        <MoviesDisplay/>\r\n        <Footer/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MainPage;\r\n","import React, { Component } from 'react';\r\nimport './App.scss';\r\nimport MainPage from './components/MainPage/MainPage'\r\n\r\nclass App extends Component {\r\n\r\n  render() {\r\n    return (\r\n        <div className=\"App\">\r\n            <MainPage/>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { \r\n  GET_MOVIES_BY_NAME_RESPONSE,\r\n  GET_MOVIES_BY_NAME_REQUEST,\r\n  EDIT_MOVIE,\r\n  DELETE_MOVIE,\r\n  ADD_MOVIE,\r\n  ID_GENE\r\n} from \"../actions/action-types\";\r\n\r\nexport const initialState = {\r\n  moviesId: [\"tt1987680\",\"tt1987682\",\"tt4154916\",\"tt7616798\",\"tt6101820\",\"tt4633694\",\"tt1650060\",\"tt2709692\",\"tt1571234\",\"tt1727824\",\"tt5715828\",\"tt6966692\",\"tt4123430\",\"tt0137523\",\"tt0485947\",\"tt0756683\"],\r\n  moviesArr: [],\r\n  fetching: false,\r\n  addId: 0\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_MOVIES_BY_NAME_REQUEST: // Fetch movies\r\n      return {\r\n        fetching: true\r\n      };\r\n    case GET_MOVIES_BY_NAME_RESPONSE:\r\n      return {\r\n        ...state,\r\n        moviesArr: action.payload,\r\n        fetching: false\r\n      }\r\n      case EDIT_MOVIE:\r\n      return{\r\n        ...state, \r\n        moviesArr: state.moviesArr.map(movie => {\r\n            if (movie.data.imdbID === action.payload.imdbID) {\r\n              movie.data = {...movie.data, ...action.payload}\r\n              return movie\r\n            }\r\n              return movie\r\n        }   )\r\n      }\r\n      case DELETE_MOVIE:\r\n      return{\r\n      ...state,\r\n      moviesArr: [...state.moviesArr.slice(0,state.moviesArr.findIndex(movie => movie.data.imdbID === action.payload.imdbID)),\r\n                  ...state.moviesArr.slice(state.moviesArr.findIndex(movie => movie.data.imdbID === action.payload.imdbID)+1)]\r\n      }\r\n      case ADD_MOVIE:\r\n      return{\r\n      ...state,\r\n      moviesArr: [...state.moviesArr, ...action.payload]\r\n      }\r\n      case ID_GENE:\r\n      return{\r\n      ...state,\r\n      addId: state.addId++\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default appReducer;","import { createStore,applyMiddleware } from \"redux\";\r\nimport appReducer from \"../reducers/appReducer\";\r\nimport thunkMiddleware from 'redux-thunk'\r\n\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\r\n\r\nconst store = createStore(\r\n    appReducer,\r\n    // composeEnhancer(applyMiddleware(thunkMiddleware)),\r\n    applyMiddleware(thunkMiddleware)\r\n    );\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {Provider} from 'react-redux'\r\n\r\nimport store from './store/store'\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>, \r\n    document.getElementById('root'));\r\n"],"sourceRoot":""}