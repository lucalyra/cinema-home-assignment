{"version":3,"sources":["components/MoviesDisplay/components/MovieContainer/components/MovieEdit/components/AcceptEdit/AcceptEdit.js","actions/action-types.js","services/MovieService.js","components/MoviesDisplay/components/MovieContainer/components/MovieEdit/MovieEdit.js","actions/appActions.js","components/MoviesDisplay/components/MovieContainer/components/DeletePopup/DeletePopup.js","components/MoviesDisplay/components/MovieContainer/MovieContainer.js","components/MoviesDisplay/MoviesDisplay.js","components/Header/components/AddMovie/components/Duplicate.js","components/Header/components/AddMovie/AddMovie.js","components/Header/Header.js","components/Footer/Footer.js","components/MainPage/MainPage.js","App.js","reducers/appReducer.js","store/store.js","index.js"],"names":["AcceptEdit","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isOpen","_this2","react_default","a","createElement","className","Dialog_default","open","openAlert","DialogTitle_default","DialogContent_default","DialogContentText_default","id","DialogActions_default","Button_default","onClick","editAccepted","Component","GET_MOVIES_BY_NAME_REQUEST","GET_MOVIES_BY_NAME_RESPONSE","EDIT_MOVIE","DELETE_MOVIE","ADD_MOVIE","ID_GENE","services_MovieService","name","axios","get","imdbId","MovieEdit","boolean","editMovie","Title","Year","Runtime","Genre","Director","imdbID","movie","setState","openEdit","handleChange","event","defineProperty","target","value","handleSubmit","preventDefault","isEditOpen","TextField_default","autoFocus","margin","onChange","label","type","fullWidth","color","components_AcceptEdit_AcceptEdit","ConnectedMovieEdit","connect","dispatch","movieObj","payload","DeletePopup","isDeleteOpen","deleteMovie","MovieContainer","openOptions","isOptionOpen","style","backgroundImage","concat","Poster","components_MovieEdit_MovieEdit","components_DeletePopup_DeletePopup","ConnectedMovieContainer","MoviesDisplay","movies","fetchMovies","moviesId","moviesArr","map","components_MovieContainer_MovieContainer","data","ConnectedMainPage","fetching","movieList","movieId","Promise","all","MoviesService","getMovieByImdbId","then","moviesList","DuplicateAlert","_Component","inherits","createClass","key","isDuplicate","closeDuplicate","AddMovie","newMovie","movieArr","num","noDuplicate","addMovie","addId","toggleAddMovie","idGene","addMovieOpen","lib","onSubmit","validators","errorMessages","Duplicate_DuplicateAlert","ConnectedAddMovie","time","Date","now","Header","window","scrollTo","components_AddMovie_AddMovie","Footer","MainPage","components_Header_Header","components_MoviesDisplay_MoviesDisplay","components_Footer_Footer","App","components_MainPage_MainPage","initialState","appReducer","arguments","length","undefined","action","objectSpread","toConsumableArray","slice","findIndex","store","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","es","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.87cd0d76.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nclass AcceptEdit extends Component{\r\n   constructor(props){\r\n       super(props)\r\n       this.state = {\r\n           isOpen: false\r\n       }\r\n   }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"accept-edit\">\r\n            <Dialog open={this.props.state.openAlert}>\r\n                <DialogTitle>{\"Ready to send?\"}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        Are you sure you want to update this movie?\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={()=>this.props.editAccepted(true)}>\r\n                        Yes\r\n                    </Button>\r\n                    <Button onClick={()=>this.props.editAccepted(false)}>\r\n                        No\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>  \r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default AcceptEdit\r\n","\r\nexport const GET_MOVIES_BY_NAME_REQUEST = \"GET_MOVIES_LIST_REQUEST\"\r\nexport const GET_MOVIES_BY_NAME_RESPONSE = \"GET_MOVIES_LIST_RESPONSE\"\r\nexport const EDIT_MOVIE = \"EDIT_MOVIE\"\r\nexport const DELETE_MOVIE = \"DELETE_MOVIE\"\r\nexport const ADD_MOVIE = \"ADD_MOVIE\"\r\nexport const ID_GENE = \"ID_GENE\"\r\n","import axios from 'axios'\r\n\r\n\r\nclass MovieService{\r\n\r\n    getMovieByName(name){  \r\n       return axios.get('https://www.omdbapi.com/?t='+ name + '&type=movie&apikey=ebf7786a')\r\n    }\r\n    getMovieByImdbId(imdbId){\r\n        return axios.get('https://www.omdbapi.com/?i='+ imdbId + '&type=movie&apikey=ebf7786a')\r\n    }\r\n    getMovieListByName(name){\r\n        return axios.get('https://www.omdbapi.com/?s='+ name + '&type=movie&apikey=ebf7786a')\r\n    }\r\n}\r\n\r\nexport default new MovieService()","import './MovieEdit.scss'\r\nimport React, { Component } from 'react'\r\nimport AcceptEdit from './components/AcceptEdit/AcceptEdit'\r\nimport { connect } from \"react-redux\";\r\nimport {editMovie} from '../../../../../../actions/appActions'\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nconst mapDispatchToProps = dispatch => { //push props to store\r\n    return {\r\n        editMovie: movieObj => dispatch(editMovie(movieObj)),\r\n        };\r\n    };\r\n\r\nclass MovieEdit extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = { \r\n               Title: this.props.movie.Title,\r\n               Year: this.props.movie.Year,\r\n               Runtime: this.props.movie.Runtime,\r\n               Genre: this.props.movie.Genre,\r\n               Director: this.props.movie.Director,\r\n               openAlert: false\r\n        }\r\n    }\r\n    editAccepted = (boolean) =>{\r\n        if(boolean){\r\n            this.props.editMovie({\r\n                \"Title\": this.state.Title,\r\n                \"Year\": this.state.Year,\r\n                \"Runtime\": this.state.Runtime,\r\n                \"Genre\": this.state.Genre,\r\n                \"Director\": this.state.Director,\r\n                \"imdbID\": this.props.movie.imdbID\r\n            })\r\n            this.setState({openAlert: false})\r\n            this.props.openEdit(false)\r\n        } else {this.setState({openAlert: false})\r\n    }\r\n    }\r\n    handleChange = (event) => {\r\n        this.setState({[event.target.name]: event.target.value});\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        this.setState({openAlert: true})\r\n        event.preventDefault();\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"movie-edit\">\r\n                <Dialog open={this.props.isEditOpen}>\r\n                <DialogTitle id=\"form-dialog-title\">Edit Movie</DialogTitle>\r\n                <DialogContent>\r\n                    <TextField autoFocus value={this.state.Title} margin=\"normal\" name=\"Title\" onChange={this.handleChange} label=\"Title\" type=\"text\" fullWidth/>\r\n                    <TextField value={this.state.Year} margin=\"normal\" name=\"Year\" onChange={this.handleChange} label=\"Year\" type=\"text\" fullWidth/>\r\n                    <TextField value={this.state.Runtime} margin=\"normal\" name=\"Runtime\" onChange={this.handleChange} label=\"Runtime\" type=\"text\" fullWidth/>\r\n                    <TextField value={this.state.Genre} margin=\"normal\" name=\"Genre\" onChange={this.handleChange} label=\"Genre\" type=\"text\" fullWidth/>\r\n                    <TextField value={this.state.Director} margin=\"normal\" name=\"Director\" onChange={this.handleChange} label=\"Director\" type=\"text\" fullWidth/>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                        <Button className=\"movie-edit-btn\" onClick={this.handleSubmit} color=\"primary\"> Send </Button>\r\n                        <Button className=\"movie-edit-btn\" onClick={()=>this.props.openEdit(false)} color=\"primary\"> Cancel </Button>\r\n                </DialogActions>\r\n                </Dialog>\r\n                <AcceptEdit state={this.state} editAccepted={this.editAccepted}/>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nconst ConnectedMovieEdit = connect(null, mapDispatchToProps)(MovieEdit)\r\nexport default ConnectedMovieEdit\r\n","import {\r\n    GET_MOVIES_BY_NAME_REQUEST,\r\n    GET_MOVIES_BY_NAME_RESPONSE,\r\n    EDIT_MOVIE,\r\n    DELETE_MOVIE,\r\n    ADD_MOVIE,\r\n    ID_GENE\r\n} from \"./action-types\";\r\n\r\nimport MoviesService from \"../services/MovieService\" \r\n\r\nexport function getMoviesRequest(){\r\n    return {\r\n        type: GET_MOVIES_BY_NAME_REQUEST\r\n    }\r\n}\r\nexport function getMoviesReceive(moviesArr){\r\n    return {\r\n        type: GET_MOVIES_BY_NAME_RESPONSE,\r\n        moviesArr\r\n    }\r\n}\r\nexport function fetchMovies(movieId){\r\n    return dispatch => { \r\n        return Promise.all( movieId.map(id => {\r\n            return  MoviesService.getMovieByImdbId(id)\r\n        }))\r\n        .then(moviesList => {\r\n            dispatch({type: GET_MOVIES_BY_NAME_RESPONSE, payload: moviesList})\r\n        });\r\n}\r\n}\r\nexport function editMovie(movieObj){\r\n    return{\r\n        type: EDIT_MOVIE,\r\n        payload: movieObj\r\n    }\r\n}\r\nexport function deleteMovie(movieObj){\r\n    return{\r\n        type: DELETE_MOVIE,\r\n        payload: movieObj\r\n    }\r\n}\r\nexport function addMovie(movieObj){\r\n    return{\r\n        type: ADD_MOVIE,\r\n        payload:[ { \r\n            data: movieObj,\r\n            time: Date.now() \r\n        } ]\r\n    }\r\n}\r\nexport function idGene(){\r\n    return{\r\n        type: ID_GENE\r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nclass DeletePopup extends Component{\r\n   constructor(props){\r\n       super(props)\r\n       this.state = {\r\n           isOpen: false\r\n       }\r\n   }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"delete-popup\">\r\n            <Dialog open={this.props.isDeleteOpen}>\r\n                <DialogTitle>{\"Want to delete?\"}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        Are you sure you want to delete this movie?\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={()=>this.props.deleteMovie(false)}>\r\n                        No\r\n                    </Button>\r\n                    <Button onClick={()=>this.props.deleteMovie(true)}>\r\n                        Yes\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>  \r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default DeletePopup\r\n","import './MovieContainer.scss'\r\nimport React, { Component } from 'react'\r\nimport MovieEdit from './components/MovieEdit/MovieEdit'\r\nimport DeletePopup from './components/DeletePopup/DeletePopup'\r\n\r\nimport { connect } from \"react-redux\";\r\nimport {deleteMovie} from '../../../../actions/appActions'\r\n\r\nconst mapDispatchToProps = dispatch => { //push props to store\r\n    return {\r\n        deleteMovie: movieObj => dispatch(deleteMovie(movieObj)),\r\n        };\r\n    };\r\n\r\nclass MovieContainer extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            isOptionOpen: false,\r\n            isEditOpen: false,\r\n            isDeleteOpen: false\r\n        }\r\n    }\r\n    openOptions = () =>{ \r\n        this.setState({isOptionOpen: !this.state.isOptionOpen})\r\n    }\r\n    openEdit = (boolean) =>{\r\n        if(boolean === true){\r\n        this.setState({\r\n            isOptionOpen: !this.state.isOptionOpen,\r\n            isEditOpen: !this.state.isEditOpen  })\r\n        } else {\r\n            this.setState({\r\n                isEditOpen: !this.state.isEditOpen  })\r\n        }\r\n    }\r\n    deleteMovie = (boolean) =>{\r\n        if(boolean){\r\n            this.props.deleteMovie(this.props.movie)\r\n            this.setState({isDeleteOpen: false})\r\n        }   else { this.setState({isDeleteOpen: false}) }\r\n        this.openOptions()\r\n\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"movie-container\">\r\n                <div className=\"movie-picture\" style={{backgroundImage: `url(${this.props.movie.Poster})`}}></div>\r\n                <div className=\"movie-container-bottom\">\r\n                    <div className=\"movie-info\">\r\n                        <span className=\"movie-title\">{this.props.movie.Title}</span>\r\n                        <span className=\"movie-year\">{this.props.movie.Year}</span>\r\n                    </div>\r\n                    <i className=\"fas fa-ellipsis-h\" onClick={this.openOptions}></i>\r\n                    <div className={this.state.isOptionOpen ? \"movie-options movie-options-open\" : \"movie-options\"}>\r\n                        <span className=\"options-btn\" onClick={()=>this.openEdit(true)}>Edit</span>\r\n                        <span className=\"options-btn\" onClick={()=>this.setState({isDeleteOpen: true})}>Delete</span>\r\n                    </div>\r\n                </div>\r\n            <MovieEdit isEditOpen={this.state.isEditOpen} openEdit={this.openEdit} movie={this.props.movie}/>\r\n            <DeletePopup isDeleteOpen={this.state.isDeleteOpen} deleteMovie={this.deleteMovie}/>\r\n            </div>   \r\n        )\r\n    }\r\n    \r\n}\r\n\r\nconst ConnectedMovieContainer = connect(null, mapDispatchToProps)(MovieContainer)\r\nexport default ConnectedMovieContainer\r\n\r\n","import './MoviesDisplay.scss'\r\nimport React, { Component } from 'react'\r\n\r\nimport MovieContainer from './components/MovieContainer/MovieContainer'\r\n\r\nimport { connect } from \"react-redux\";\r\nimport {fetchMovies} from '../../actions/appActions'\r\n\r\nconst mapDispatchToProps = dispatch => { //push props to store\r\n    return {\r\n        fetchMovies: movieList => dispatch(fetchMovies(movieList)),\r\n        };\r\n    };\r\nconst mapStateToProps = state => { //pull props from store\r\n    return { \r\n        moviesId: state.moviesId,\r\n        moviesArr: state.moviesArr,\r\n        fetching: state.fetching\r\n        };\r\n    };  \r\n      \r\nclass MoviesDisplay extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            movies: [],\r\n        }\r\n    }\r\n    componentWillMount(){\r\n        this.props.fetchMovies(this.props.moviesId)\r\n    }\r\n    \r\n    render(){\r\n        return(\r\n                <div className=\"movie-display\">\r\n                    { this.props.moviesArr.map( movie => <MovieContainer movie={movie.data}/> ) }\r\n                </div>\r\n        )\r\n    }\r\n}\r\nconst ConnectedMainPage = connect(mapStateToProps, mapDispatchToProps)(MoviesDisplay)\r\nexport default ConnectedMainPage\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nexport function noDuplicate(newMovie, movieArr ){\r\n    let num = 0 \r\n    movieArr.map(movie =>{\r\n        if(movie.data.Title == newMovie.Title){ num++ } \r\n    } )\r\n    return num\r\n}\r\n\r\nexport class DuplicateAlert extends Component{\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"duplicate-popup\">\r\n                <Dialog open={this.props.state.isDuplicate}>\r\n                    <DialogTitle>{\"Duplicate\"}</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText id=\"alert-dialog-description\">\r\n                            Sorry but the movie \"{this.props.state.Title}\" already exists in the database.\r\n                            Try adding another movie.\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.props.closeDuplicate}>\r\n                            Ok\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>  \r\n            </div>\r\n        )\r\n    }\r\n}","import './AddMovie.scss'\r\nimport React, { Component } from 'react'\r\nimport { connect } from \"react-redux\";\r\nimport {addMovie, idGene} from '../../../../actions/appActions'\r\nimport {noDuplicate,DuplicateAlert} from './components/Duplicate'\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { ValidatorForm, TextValidator} from 'react-material-ui-form-validator';\r\n\r\nconst mapDispatchToProps = dispatch => { //push props to store\r\n    return {\r\n        addMovie: movieObj => dispatch(addMovie(movieObj)),\r\n        idGene: () => dispatch(idGene())\r\n        };\r\n    };\r\n    \r\nconst mapStateToProps = state => { //pull props from store\r\n    return { \r\n        addId: state.addId,\r\n        moviesArr: state.moviesArr\r\n        };\r\n    };  \r\n\r\nclass AddMovie extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            \"Title\": \"\",\r\n            \"Year\": \"\",\r\n            \"Runtime\": \"\",\r\n            \"Genre\": \"\",\r\n            \"Director\": \"\",\r\n            \"isDuplicate\": false\r\n        }\r\n    }\r\n    \r\n    handleChange = (event) => {\r\n        this.setState({[event.target.name]: event.target.value});\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        if(noDuplicate(this.state, this.props.moviesArr) > 0){\r\n            this.setState({isDuplicate: true}) \r\n        } else {\r\n            this.props.addMovie({\r\n                \"Title\": this.state.Title,\r\n                \"Year\": this.state.Year,\r\n                \"Runtime\": this.state.Runtime,\r\n                \"Genre\": this.state.Genre,\r\n                \"Director\": this.state.Director,\r\n                \"imdbID\": this.props.addId,\r\n                \"Poster\": \"https://i.imgur.com/Z2MYNbj.png/large_movie_poster.png\"\r\n            })\r\n            this.props.toggleAddMovie()\r\n            this.props.idGene()\r\n            this.setState({ \"Title\": \"\", \"Year\": \"\", \"Runtime\": \"\", \"Genre\": \"\", \"Director\": \"\"})\r\n        }\r\n        event.preventDefault()\r\n    }\r\n    closeDuplicate = () =>{\r\n        this.setState({isDuplicate: false})\r\n    }\r\n    render(){\r\n        return(\r\n            <div className='add-movie'>\r\n                <Dialog open={this.props.addMovieOpen}>\r\n                    <DialogTitle className=\"add-movie-title\">Add a Movie</DialogTitle>\r\n                    <DialogContentText className=\"add-movie-description\">\r\n                        Please fill all the fields.\r\n                    </DialogContentText>\r\n                    <ValidatorForm className=\"add-movie-form\" onSubmit={this.handleSubmit}>\r\n                        <TextValidator  autoFocus validators={['required', 'isString']} \r\n                                        value={this.state.Title}\r\n                                        margin=\"normal\" \r\n                                        name=\"Title\" \r\n                                        onChange={this.handleChange} \r\n                                        label=\"Title\" \r\n                                        type=\"text\"\r\n                                        errorMessages={['This field is required', 'Title is not valid']} \r\n                                        fullWidth\r\n                                        />\r\n                        <TextValidator  validators={['required', 'isNumber',\"minNumber:1700\"]} \r\n                                        value={this.state.Year} \r\n                                        margin= \"normal\"\r\n                                        name=\"Year\" \r\n                                        onChange={this.handleChange} \r\n                                        label=\"Year\" \r\n                                        type=\"text\"\r\n                                        errorMessages={['This field is required', 'Year is not valid', 'Year is not valid']}\r\n                                        fullWidth\r\n                                        />\r\n                        <TextValidator  validators={['required', 'isString']} \r\n                                        value={this.state.Runtime} \r\n                                        margin=\"normal\" \r\n                                        name=\"Runtime\" \r\n                                        onChange={this.handleChange} \r\n                                        label=\"Runtime\" \r\n                                        type=\"text\"\r\n                                        errorMessages={['This field is required', 'Runtime is not valid']} \r\n                                        fullWidth\r\n                                        />\r\n                        <TextValidator  validators={['required', 'isString']} \r\n                                        value={this.state.Genre} \r\n                                        margin=\"normal\" \r\n                                        name=\"Genre\" \r\n                                        onChange={this.handleChange} \r\n                                        label=\"Genre\" \r\n                                        type=\"text\"\r\n                                        errorMessages={['This field is required', 'Genre is not valid']} \r\n                                        fullWidth\r\n                                        />\r\n                        <TextValidator  validators={['required', 'isString']} \r\n                                        value={this.state.Director} \r\n                                        margin=\"normal\" \r\n                                        name=\"Director\" \r\n                                        onChange={this.handleChange} \r\n                                        label=\"Director\" \r\n                                        type=\"text\" \r\n                                        errorMessages={['This field is required', \"Director's name is not valid\"]} \r\n                                        fullWidth\r\n                                        />\r\n                        <DialogActions>\r\n                            <Button className=\"movie-edit-btn\" type=\"submit\" color=\"primary\"> Send </Button>\r\n                            <Button className=\"movie-edit-btn\" onClick={this.props.toggleAddMovie} color=\"primary\"> Cancel </Button>\r\n                        </DialogActions>\r\n                    </ValidatorForm>\r\n                </Dialog>\r\n                <DuplicateAlert state={this.state} closeDuplicate={this.closeDuplicate}/>\r\n            </div>\r\n    )\r\n    }\r\n}\r\nconst ConnectedAddMovie = connect(mapStateToProps, mapDispatchToProps)(AddMovie)\r\nexport default ConnectedAddMovie\r\n","import './Header.scss'\r\nimport React, { Component } from 'react'\r\nimport AddMovie from './components/AddMovie/AddMovie'\r\n\r\nclass Header extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            addMovieOpen: false\r\n        }\r\n    }\r\n    toggleAddMovie = () => {\r\n        this.setState( { addMovieOpen: !this.state.addMovieOpen } )\r\n    }\r\n    render(){\r\n     \r\n        return(\r\n            <div className=\"header\">\r\n                <div className=\"header-background\">\r\n                    <div className=\"top-header\">\r\n                        <div className=\"header-link-container\">\r\n                            <div className=\"header-link-btn\" onClick={()=>window.scrollTo(0,0)}>\r\n                                <span className=\"header-link-text\"> Home </span>\r\n                            </div>\r\n                            <div className=\"header-link-btn\">\r\n                                <span className=\"header-link-text\" onClick={this.toggleAddMovie}> Add Movies </span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                        <div className=\"header-info\">\r\n                            <span className=\"header-title\">Cinema</span>\r\n                            <span className=\"header-description\">Your Movie Database Organizer</span>\r\n                        </div>\r\n                    <AddMovie addMovieOpen={this.state.addMovieOpen} toggleAddMovie={this.toggleAddMovie}/>\r\n                </div>\r\n            </div>\r\n    )   }\r\n}\r\nexport default Header\r\n\r\n\r\n\r\n","import './Footer.scss'\r\nimport React, { Component } from 'react'\r\n\r\nclass Footer extends Component{\r\n\r\n    render(){\r\n     \r\n        return(\r\n            <div className=\"footer\">\r\n                <div>Lucas Lyra</div>\r\n                <div>Email: lucalyra@gmail.com</div>\r\n            </div>\r\n    )   }\r\n}\r\nexport default Footer\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport './MainPage.scss';\r\n\r\nimport MoviesDisplay from '../MoviesDisplay/MoviesDisplay'\r\nimport Header from '../Header/Header'\r\nimport Footer from '../Footer/Footer'\r\nclass MainPage extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"main-page\">\r\n        <Header/>\r\n        <MoviesDisplay/>\r\n        <Footer/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MainPage;\r\n","import React, { Component } from 'react';\r\nimport './App.scss';\r\nimport MainPage from './components/MainPage/MainPage'\r\n\r\nclass App extends Component {\r\n\r\n  render() {\r\n    return (\r\n        <div className=\"App\">\r\n            <MainPage/>\r\n        </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { \r\n  GET_MOVIES_BY_NAME_RESPONSE,\r\n  GET_MOVIES_BY_NAME_REQUEST,\r\n  EDIT_MOVIE,\r\n  DELETE_MOVIE,\r\n  ADD_MOVIE,\r\n  ID_GENE\r\n} from \"../actions/action-types\";\r\n\r\nexport const initialState = {\r\n  moviesId: [\"tt1987680\",\"tt1987682\",\"tt4154916\",\"tt7616798\",\"tt6101820\",\"tt4633694\",\"tt1650060\",\"tt2709692\",\"tt1571234\",\"tt1727824\",\"tt5715828\",\"tt6966692\",\"tt4123430\"],\r\n  moviesArr: [],\r\n  fetching: false,\r\n  addId: 0\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_MOVIES_BY_NAME_REQUEST: // Fetch movies\r\n      return {\r\n        fetching: true\r\n      };\r\n    case GET_MOVIES_BY_NAME_RESPONSE:\r\n      return {\r\n        ...state,\r\n        moviesArr: action.payload,\r\n        fetching: false\r\n      }\r\n      case EDIT_MOVIE:\r\n      return{\r\n        ...state, \r\n        moviesArr: state.moviesArr.map(movie => {\r\n            if (movie.data.imdbID === action.payload.imdbID) {\r\n              movie.data = {...movie.data, ...action.payload}\r\n              return movie\r\n            }\r\n              return movie\r\n        }   )\r\n      }\r\n      case DELETE_MOVIE:\r\n      return{\r\n      ...state,\r\n      moviesArr: [...state.moviesArr.slice(0,state.moviesArr.findIndex(movie => movie.data.imdbID === action.payload.imdbID)),\r\n                  ...state.moviesArr.slice(state.moviesArr.findIndex(movie => movie.data.imdbID === action.payload.imdbID)+1)]\r\n      }\r\n      case ADD_MOVIE:\r\n      return{\r\n      ...state,\r\n      moviesArr: [...state.moviesArr, ...action.payload]\r\n      }\r\n      case ID_GENE:\r\n      return{\r\n      ...state,\r\n      addId: state.addId++\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default appReducer;","import { createStore,applyMiddleware } from \"redux\";\r\nimport appReducer from \"../reducers/appReducer\";\r\nimport thunkMiddleware from 'redux-thunk'\r\n\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\r\n\r\nconst store = createStore(\r\n    appReducer,\r\n    // composeEnhancer(applyMiddleware(thunkMiddleware)),\r\n    applyMiddleware(thunkMiddleware)\r\n    );\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {Provider} from 'react-redux'\r\n\r\nimport store from './store/store'\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>, \r\n    document.getElementById('root'));\r\n"],"sourceRoot":""}